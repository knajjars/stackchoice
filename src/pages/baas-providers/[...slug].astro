---
import { Image } from "astro:assets";
import { type CollectionEntry, getCollection } from "astro:content";
import MainLayout from "~/layouts/Layout.astro";
import Accordion from "~/components/Accordion.astro";
import FeatureList from "~/components/BaaS/FeatureList.astro";
import startCase from "lodash/startCase";
import { Icon } from "astro-icon/components";
import Pill from "~/components/Pill.astro";
import PricingCard from "~/components/BaaS/PricingCard.astro";

export async function getStaticPaths() {
  const baasProviders = await getCollection("baasProvider");
  return baasProviders.map((baas) => ({
    params: { slug: baas.data.slug },
    props: baas,
  }));
}

type Props = CollectionEntry<"baasProvider">;

const baasProvider = Astro.props;
const pageTitle = `${baasProvider.data.name} | Features, Overview, and Pricing`;

function hasEnabledFeatures(details: Record<string, unknown>): boolean {
  return Object.values(details).some((value) => !!value);
}
---

<MainLayout
  {...baasProvider.data}
  title={pageTitle}
  description={baasProvider.data.shortDescription}
>
  <div class="container mx-auto px-4 py-16 sm:px-6 lg:px-8">
    <div class="grid grid-cols-1 gap-12 lg:grid-cols-3">
      <div
        class="flex flex-col items-center space-y-8 lg:sticky lg:top-8 lg:self-start"
      >
        <Image
          src={baasProvider.data.logo}
          alt={baasProvider.data.name}
          format="webp"
          loading="eager"
          width={180}
          class="transition-transform duration-300 hover:scale-105"
        />
        <div class="flex flex-col items-center space-y-4">
          <a
            target="_blank"
            href={baasProvider.data.website}
            class="flex items-center gap-2 rounded-full bg-purple-100 px-4 py-2 text-sm font-medium text-purple-700 transition-colors duration-300 hover:bg-purple-200"
          >
            Visit Website
            <Icon name="mdi:external-link" class="size-4" />
          </a>
          {
            baasProvider.data.repository && (
              <a
                target="_blank"
                href={baasProvider.data.repository}
                class="flex items-center gap-2 rounded-full bg-gray-100 px-4 py-2 text-sm font-medium text-gray-700 transition-colors duration-300 hover:bg-gray-200"
              >
                View Source
                <Icon name="mdi:github" class="size-4" />
              </a>
            )
          }
        </div>
      </div>
      <div class="lg:col-span-2">
        <h1 class="mb-6 text-4xl font-extrabold text-gray-900 sm:text-5xl">
          {baasProvider.data.name}
        </h1>
        <p class="mb-10 text-xl leading-relaxed text-gray-600">
          {baasProvider.data.description}
        </p>
        <div class="mb-14 space-y-10">
          <div>
            <h2 class="mb-4 text-2xl font-semibold text-gray-800">
              Hosting Options
            </h2>
            <div class="flex flex-wrap gap-3">
              <Pill
                text="Cloud Hosting"
                type={baasProvider.data.cloudHosted ? "success" : "empty"}
              />
              <Pill
                text="Self Hosting"
                type={baasProvider.data.selfHosted ? "success" : "empty"}
              />
            </div>
          </div>
          <div>
            <h2 class="mb-4 text-2xl font-semibold text-gray-800">
              Official SDKs
            </h2>
            <div class="flex flex-wrap gap-3">
              {baasProvider.data.sdks.map((sdk) => <Pill text={sdk} />)}
            </div>
          </div>
        </div>
        <div class="mb-14">
          <h2 class="mb-6 text-3xl font-bold text-gray-800">Unique Features</h2>
          <ul class="grid gap-4 sm:grid-cols-2 lg:grid-cols-3">
            {
              baasProvider.data.uniqueFeatures.map((feature) => (
                <li class="flex items-start space-x-3 rounded-lg bg-purple-100 p-4 transition-all hover:scale-105">
                  <Icon
                    name="mdi:star"
                    class="mt-1 h-5 w-5 flex-shrink-0 text-purple-500"
                  />
                  <span class="text-base leading-relaxed text-purple-900">
                    {feature}
                  </span>
                </li>
              ))
            }
          </ul>
        </div>
        <h2 class="mb-8 text-3xl font-bold text-gray-800">Features</h2>
        <div class="flex flex-col gap-8 md:flex-row">
          <div class="flex flex-1 flex-col gap-6">
            {
              Object.entries(baasProvider.data.features)
                .slice(
                  0,
                  Math.ceil(
                    Object.entries(baasProvider.data.features).length / 2,
                  ),
                )
                .map(([feature, details]) => (
                  <Accordion
                    key={feature}
                    canOpen={hasEnabledFeatures(details)}
                  >
                    <slot slot="title">
                      <Icon
                        name={
                          hasEnabledFeatures(details)
                            ? "mdi:check-circle"
                            : "mdi:close-circle"
                        }
                        class={`mr-2 inline-block ${
                          hasEnabledFeatures(details)
                            ? "text-green-500"
                            : "text-red-500"
                        }`}
                      />
                      <span>{startCase(feature)}</span>
                    </slot>
                    <FeatureList features={details} />
                  </Accordion>
                ))
            }
          </div>
          <div class="flex flex-1 flex-col gap-6">
            {
              Object.entries(baasProvider.data.features)
                .slice(
                  Math.ceil(
                    Object.entries(baasProvider.data.features).length / 2,
                  ),
                )
                .map(([feature, details]) => (
                  <Accordion
                    key={feature}
                    canOpen={hasEnabledFeatures(details)}
                  >
                    <slot slot="title">
                      <Icon
                        name={
                          hasEnabledFeatures(details)
                            ? "mdi:check-circle"
                            : "mdi:close-circle"
                        }
                        class={`mr-2 inline-block ${
                          hasEnabledFeatures(details)
                            ? "text-green-500"
                            : "text-red-500"
                        }`}
                      />
                      <span>{startCase(feature)}</span>
                    </slot>
                    <FeatureList features={details} />
                  </Accordion>
                ))
            }
          </div>
        </div>
        <h2 class="mb-8 mt-14 text-3xl font-bold text-gray-800">Pricing</h2>
        <div class="space-y-8">
          {
            baasProvider.data.cloudHosted ? (
              <PricingCard baasProvider={baasProvider} />
            ) : (
              <p class="text-lg text-gray-600">
                This provider does not currently offer cloud hosting. Please
                check their website for self-hosting options and pricing
                details.
              </p>
            )
          }
        </div>
      </div>
    </div>
  </div>
</MainLayout>
