---
import MainLayout from "~/layouts/Layout.astro";
import { getCollection } from "astro:content";
import ListBaaS from "~/components/BaaS/List.astro";
import ListFullStackFramework from "~/components/FullStackFramework/List.astro";

const baasProviders = await getCollection("baasProvider");
const fullstackFrameworks = await getCollection("fullStackFramework");
---

<MainLayout
  description="Forget about decision paralysis. We help you find the best tech stack for your next project."
>
  <section
    class="hero relative overflow-hidden rounded-lg bg-gradient-to-br from-purple-700 via-indigo-600 to-blue-500 px-8 py-24 text-white shadow-2xl md:px-12"
  >
    <div class="container relative z-10 mx-auto max-w-4xl text-center">
      <h1
        class="animate-fade-in mb-8 text-4xl font-extrabold leading-tight tracking-tight md:text-6xl"
      >
        <span class="text-white"
          >StackChoice<span class="text-yellow-300">.dev</span></span
        >
      </h1>
      <p class="animate-fade-in mb-12 text-2xl leading-relaxed text-gray-100">
        Forget about <strong class="font-bold">decision paralysis.</strong> We help
        you find the best tech stack for your next project.
      </p>
    </div>
    <div class="absolute inset-0 overflow-hidden">
      {
        [...Array(50)].map((_, index) => (
          <div
            class={`animate-float-${["slow", "medium", "fast"][index % 3]} absolute rounded-full bg-white opacity-10`}
            style={{
              width: `${Math.random() * 20 + 10}px`,
              height: `${Math.random() * 20 + 10}px`,
              left: `${Math.random() * 100}%`,
              top: `${Math.random() * 100}%`,
              animationDelay: `${Math.random() * 5}s`,
            }}
          />
        ))
      }
    </div>
  </section>
  <ListFullStackFramework fullStackFrameworks={fullstackFrameworks} />
  <ListBaaS baasProviders={baasProviders} />
</MainLayout>

<style>
  @keyframes float {
    0%,
    100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-40px);
    }
  }

  @keyframes fade-in {
    0% {
      opacity: 0;
      transform: translateY(20px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-fade-in {
    animation: fade-in 1s ease-out forwards;
  }

  .animate-float-slow {
    animation: float 8s ease-in-out infinite;
  }

  .animate-float-medium {
    animation: float 6s ease-in-out infinite;
  }

  .animate-float-fast {
    animation: float 4s ease-in-out infinite;
  }
</style>
