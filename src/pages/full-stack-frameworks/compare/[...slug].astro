---
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import MainLayout from "~/layouts/Layout.astro";
import { Image } from "astro:assets";
import { Icon } from "astro-icon/components";
import Pill from "~/components/Pill.astro";

export async function getStaticPaths() {
  const fullStackFrameworks = await getCollection("fullStackFramework");

  return fullStackFrameworks.flatMap((framework1) =>
    fullStackFrameworks
      .filter((framework2) => framework1.data.slug !== framework2.data.slug)
      .map((framework2) => ({
        params: {
          slug: `${framework1.data.slug}-vs-${framework2.data.slug}`,
        },
        props: { framework1, framework2 },
      })),
  );
}

type Props = {
  framework1: CollectionEntry<"fullStackFramework">;
  framework2: CollectionEntry<"fullStackFramework">;
};

const { framework1, framework2 } = Astro.props as Props;
const pageTitle = `${framework1.data.name} vs ${framework2.data.name} | Comparison`;
const pageDescription = `Compare ${framework1.data.name} and ${framework2.data.name} to find the best Full-Stack Framework for your needs.`;

function checkFeature(
  frameworkFeatures: CollectionEntry<"fullStackFramework">["data"]["features"],
  feature: keyof CollectionEntry<"fullStackFramework">["data"]["features"],
) {
  return frameworkFeatures[feature];
}
---

<MainLayout title={pageTitle} description={pageDescription}>
  <div class="container mx-auto px-4 py-12 sm:px-6 lg:px-8">
    <header class="mb-12 text-center">
      <h1 class="mb-4 text-4xl font-extrabold text-gray-900 sm:text-5xl">
        <span class="text-purple-600">{framework1.data.name}</span> vs <span
          class="text-purple-600">{framework2.data.name}</span
        >
      </h1>

      <p class="mb-12 text-center text-xl text-gray-700">
        {pageDescription}
      </p>
    </header>

    <div class="grid gap-8 lg:grid-cols-2">
      {
        [framework1, framework2].map((framework) => (
          <div class="group flex flex-col rounded-2xl bg-white p-6 shadow-lg">
            <div class="mb-6 flex items-start justify-between gap-3">
              <Image
                decoding="async"
                src={framework.data.logo}
                alt={framework.data.name}
                width={100}
                height={100}
                loading="eager"
                class="object-contain transition-transform duration-300 group-hover:scale-105"
              />
              <div class="flex flex-col gap-3 xl:flex-row">
                <Pill
                  text={framework.data.language}
                  icon={`mdi:language-${framework.data.language.toLowerCase()}`}
                />
              </div>
            </div>
            <h2 class="mb-3 text-2xl font-bold text-gray-900 transition-colors duration-300 group-hover:text-purple-600">
              {framework.data.name}
            </h2>
            <p class="mb-4 h-[120px] text-gray-600 transition-colors duration-300 group-hover:text-gray-800">
              {framework.data.shortDescription}
            </p>
            <h3 class="mb-3 text-lg font-semibold text-purple-900">
              Unique Features
            </h3>
            <ul class="mb-6 flex-grow space-y-2">
              {framework.data.uniqueFeatures.map((feature) => (
                <li class="flex items-start">
                  <Icon
                    name="mdi:star"
                    class="mr-2 mt-1 h-4 w-4 flex-shrink-0 text-yellow-500"
                  />
                  <span class="text-gray-700">{feature}</span>
                </li>
              ))}
            </ul>
            <div class="flex justify-start gap-3">
              <a
                href={`/full-stack-frameworks/${framework.data.slug}`}
                class="inline-flex items-center gap-1 rounded-md bg-purple-600 px-4 py-2 text-sm font-medium text-white transition-colors duration-300 hover:bg-purple-700"
              >
                Details
                <Icon name="mdi:arrow-right" class="size-4" />
              </a>
              <a
                href={framework.data.website}
                target="_blank"
                rel="noopener noreferrer"
                class="inline-flex items-center gap-1 rounded-md bg-gray-200 px-4 py-2 text-sm font-medium text-gray-800 transition-colors duration-300 hover:bg-gray-300"
              >
                Website
                <Icon name="mdi:external-link" class="size-4" />
              </a>
            </div>
          </div>
        ))
      }
    </div>

    <div class="mt-12 flex justify-center gap-4">
      <a
        href="#comparison"
        class="inline-flex items-center gap-2 rounded-md bg-purple-100 px-5 py-2 text-base font-medium text-purple-700 transition-all duration-300 hover:scale-105"
      >
        Compare Features
        <Icon name="mdi:star" class="size-5" />
      </a>
    </div>
  </div>

  <div class="flex flex-col gap-12">
    <div class="container mx-auto px-4 sm:px-6 lg:px-8" id="comparison">
      <h2 class="mb-12 text-center text-4xl font-bold text-purple-900">
        Feature Comparison
      </h2>
      <div class="space-y-16">
        <div
          class="overflow-hidden rounded-2xl bg-white shadow-xl transition-all duration-300 hover:shadow-2xl"
        >
          <h3 class="bg-purple-100 p-6 text-3xl font-bold text-purple-900">
            Built-in Features
          </h3>
          <div class="overflow-x-auto">
            <table class="w-full border-collapse">
              <thead class="bg-gray-50">
                <tr>
                  <th
                    class="w-1/3 border-b p-4 text-left text-base font-semibold text-gray-900"
                  >
                    Feature
                  </th>
                  <th
                    class="w-1/3 border-b p-4 text-left text-base font-semibold text-gray-900"
                  >
                    {framework1.data.name}
                  </th>
                  <th
                    class="w-1/3 border-b p-4 text-left text-base font-semibold text-gray-900"
                  >
                    {framework2.data.name}
                  </th>
                </tr>
              </thead>
              <tbody>
                {
                  Object.keys(framework1.data.features).map(
                    (feature, index) => (
                      <tr class={index % 2 === 0 ? "bg-white" : "bg-gray-50"}>
                        <td class="w-1/3 border-b p-4 text-base font-medium text-gray-900">
                          {feature}
                        </td>
                        {[framework1, framework2].map((framework) => (
                          <td class="w-1/3 border-b p-4">
                            {checkFeature(
                              framework.data.features,
                              feature as keyof typeof framework.data.features,
                            ) ? (
                              <Icon
                                name="mdi:check-circle"
                                class="h-6 w-6 text-green-500"
                              />
                            ) : (
                              <Icon
                                name="mdi:close-circle"
                                class="h-6 w-6 text-red-500"
                              />
                            )}
                          </td>
                        ))}
                      </tr>
                    ),
                  )
                }
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</MainLayout>
